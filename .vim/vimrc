"
" VIMRC
" Author: Nil Ventosa  <ventosa@gmail.com>
"   github.com/nilventosa
"   ventosa.io


""" VARIABLES {{{

    let mapleader = " "
    let $RTP=split(&runtimepath, ',')[0] " Runtime path env variable
    let $RC="$HOME/.vim/vimrc" " vimrc env variable

""" }}}


""" GENERAL SETTINGS {{{

    set scrolloff=5 " Leave 10 lines when scrolling
    set nocompatible " This thing is needed apparently to tell vim it it not vi
    set backspace=indent,eol,start " To be able to delete with backspace
    set path=.,** " Find in subfolders
    set wildmenu " Display all matching files when tab complete
    set tabstop=4 shiftwidth=4 softtabstop=4 shiftround expandtab
    set pastetoggle=<F2> clipboard=unnamedplus " Copy paste
    set nu rnu " Display line numbers
    set wildmode=longest,list,full " Enable autocompletion
    set splitright splitbelow " Splits open bottom right
    set hlsearch " Display highlights
    set incsearch " Highlights the search results while typing
    set updatetime=300 " Time for CursorHold event 
    set cursorline " Show cursor line
    set nofoldenable " Disable folding
    set autowriteall " Saves file when leaving the buffer
    set noswapfile

""" }}}

""" OPTIONS {{{

    syntax on " Enable syntax and plugins
    filetype plugin indent on " Filetype detection
    colorscheme tucnak " Set color scheme

""" }}}


""" MAPPINGS {{{

    " Toggle netrw
    map <C-n> :call ToggleNetrw()<CR>
    tnoremap <C-n> <c-\><C-n>

    " Toggle lune number mode
    nnoremap <leader>n :call g:ToggleLinenumberMode()<cr>
    
    " Splits resize
    noremap <Up> <C-w>+
    noremap <Down> <C-w>-
    noremap <Left> <C-w><
    noremap <Right> <C-w>>

    " Generate ctags
    nnoremap <leader>t :call GenerateTags()<CR><CR>

    "Display the highlight groups of the word under cursor
    nmap <leader>h :call ShowHighlightGroups()<CR>

    " Control D and U move slower
    nnoremap <C-u> 10k
    xnoremap <C-u> 10k
    nnoremap <C-d> 10j
    xnoremap <C-d> 10j

    "Move to next tab
    map <C-t> :tabnext<cr>
    tnoremap <C-t> <C-t>

""" }}}


""" AUTOCOMMANDS {{{

    augroup vimrc_auto
        autocmd!
        autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
        autocmd WinEnter * setlocal cursorline
        autocmd WinLeave * setlocal nocursorline
	autocmd cursorhold,cursorholdi * call HighlightWordUnderCursor()
    augroup END

""" }}}


""" COMMANDS {{{



""" }}}


""" functions {{{

    function! g:HighlightWordUnderCursor()
        if getline(".")[col(".")-1] !~# '[[:punct:][:blank:]]' 
            exec 'match' 'Search' '/\V\<'.expand('<cword>').'\>/' 
        else 
            match none 
        endif
    endfunction

    function! g:ShowHighlightGroups()
        if !exists('*synstack')
            return
        endif
        echo map(synstack(line('.'),col('.')), "synIDattr(v:val, 'name')")
    endfunction

    function! g:ToggleLinenumberMode()
        if &rnu == 1
            set nonu
            set nornu
        else
            set number relativenumber
        endif
    endfunction

    function! g:GenerateTags()
        if &filetype == 'go'
            !gotags -R -f tags .
        else
            !ctags -R .
        endif
    endfunction

""" }}}


""" PLUGINS THINGS {{{

	 if empty(glob('~/.vim/autoload/plug.vim'))
	 	silent !mkdir -p ~/.vim/autoload
	 	silent !curl -fLo ~/.vim/autoload/plug.vim
	 				\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	 	autocmd VimEnter * PlugInstall
	 endif 
    
     call plug#begin()
        Plug 'tomtom/tcomment_vim'
        Plug 'Raimondi/delimitMate'
        Plug 'govim/govim'
     call plug#end()
    
    let delimitMate_expand_cr = 1
    let g:go_def_mapping_enabled = 0 " To use tags

""" }}}


""" NEOVIM {{{

    

"" "}}}
